{
  "name": "web-rwd",
  "tagline": "响应式网站demos",
  "body": "\r\n# 响应式网站设计\r\n\r\n**目录：**\r\n\r\n1. 前期准备\r\n\r\n2. 如何组织项目目录结构\r\n\r\n3. 开始编写HTML代码\r\n\r\n4. 实现PC端的样式\r\n\r\n5. 实现移动端的样式\r\n\r\n6. 实现响应式广告和响应式图片\r\n\r\n7. nodejs简介\r\n\r\n8. 处理兼容性及多设备调试\r\n\r\n9. 打包发布\r\n\r\n10. IDE\r\n\r\n11. 原型设计和切图\r\n\r\n\r\n## 1 前期准备\r\n\r\n本项目为一个互联网金融的响应式网站。\r\n\r\n### 响应式网站设计\r\n\r\n“响应式互联网设计”: [http://alistapart.com/article/responsive-web-design](http://alistapart.com/article/responsive-web-design \"responsive-web-design\")。\r\n\r\n弹性布局——响应式网站。\r\n\r\n响应式网站概念：\r\n\r\n- 弹性网格布局；\r\n- 弹性图片；\r\n- 媒体查询；\r\n\r\n### 关于浏览器\r\n\r\nQQ浏览器的X5内核：[http://x5.tencent.com/](http://x5.tencent.com/)\r\n\r\n### 关于媒体查询\r\n\r\n\t@media all and (min-width:800px) and (orientation:landscape){\r\n\t\t……\r\n\t}\r\n\r\n\r\n\r\n## 2 如何组织项目目录结构\r\n\r\n## 3 开始编写HTML代码\r\n\r\n## 4 实现PC端的样式\r\n\r\n## 5 实现移动端的样式\r\n\r\n## 6 实现响应式广告和响应式图片\r\n\r\n### 响应式广告实现\r\n\r\n**完善的广告滚动组件**：\r\n\r\n- 支持不同图片数量；\r\n- 支持响应式布局；\r\n- 具有良好的兼容性；\r\n\r\n不要重复造轮子--**挑选第三方组件**：\r\n\r\n- 使用广泛性；\r\n- 开源且活跃；\r\n- 文档齐全；\r\n- 轻量级；\r\n- Owl Carousel2组件，依赖于jQuery或Zepto；\r\n\r\nCDN方式链接文件：\r\n[https://cdnjs.com/](https://cdnjs.com/ \"cdnjs官网\")\r\n\r\n国内可以选择BAT的CDN链接；\r\n\r\n**流程**：\r\n\r\n1. 引入Owl Carousel2的css和js文件；\r\n1. 设置默认的样式文件``owl.theme.default.min.css``；\r\n2. 书写匹配的HTML结构；\r\n3. 调用组件，在js文件中调用；\r\n4. API的参数设置，直接在上面组件的调用`owlCarousel()`方法里传入参数的对象形式；\r\n\r\n### 图片的响应式\r\n\r\n响应式图片：适配不同端图片的区别。\r\n\r\n- JS或服务端；编写JS脚本判断浏览器的页面尺寸，或在服务器端编码验证客户端尺寸；\r\n\r\n```\r\n\r\n    <!--响应式图片设置js脚本-->\r\n    <script>\r\n        $(document).ready(function(){\r\n            \r\n            function makeImageResponsive(){\r\n                var width = $(window).width();\r\n                var img = $('.content img');\r\n                if(width <= 480){\r\n                    img.attr('src','img/ad001.png');\r\n                }else if(width <= 800){\r\n                    img.attr('src','img/ad001-m.png');\r\n                }else{\r\n                    img.attr('src','img/ad001-l.png');\r\n                }\r\n            }\r\n            \r\n            $(window).on('resize load',makeImageResponsive);\r\n        })\r\n    </script>\r\n\r\n```\r\n\r\n- HTML元素属性实现：srcset属性、srcset属性配合sizes；\r\n\r\n- picture元素 + source元素：浏览器找到相适配的源文件设置；\r\n\r\n- svg格式的图片：缩放不失真，H5-SVG图片，BAT公司的SVG图库；\r\n\r\n**注意**：\r\n\r\n1. srcset单独设置存在问题，需配合sizes属性；\r\n\r\n1. Google的webp压缩格式图片；\r\n\r\n1. 编辑器：Illustrator，在线编辑器[https://icomoon.io/](https://icomoon.io/)；\r\n\r\n1. SVG的兼容性较好；\r\n\r\n1. **图片压缩**：\r\n\r\n\t- SVG压缩 [http://iconizr.com/](http://iconizr.com/ \"SVG压缩\");\r\n\t- PNG/JPG压缩 [https://tinypng.com/](https://tinypng.com/ \"png/jpg压缩\");\r\n\r\n### **具体实现**：\r\n\r\n- polyfill方法：对于新特性，polyfill使更有能力的浏览器做得更好，逊色的浏览器也可以有自己的替代方法；\r\n\t\r\n- 对于picture元素的polyfill库——picture库 [http://scottjehl.github.io/picturefill/](http://scottjehl.github.io/picturefill/ \"picturefill\");\r\n\r\n- 引入picturefill的js库文件，用picture实现响应式图片；\r\n\r\n## 7 Node.js简介\r\n\r\nNode.js中文网 [http://nodejs.cn/](http://nodejs.cn/ \"Node.js中文网\")\r\n> Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境。Node.js 使用了一个事件驱动、非阻塞式 I/O 的模型，使其轻量又高效。Node.js 的包管理器 npm，是全球最大的开源库生态系统。\r\n\r\n### 安装Node.js\r\n\r\n- 检验安装：\r\n\r\nGit Bash或 DOS 下 ： 输入 `node -v` 提示版本号 `v6.2.0`;\r\n\r\n- hello Node.js\r\n\r\nGit Bash或 DOS 下 ： 输入 `node test.js` 会解释执行js文件;\r\n\r\n### npm使用\r\n\r\nnpm官网：[https://www.npmjs.com/](https://www.npmjs.com/ \"npm官网\")\r\n\r\n- 检验安装：\r\n\r\nGit Bash或 DOS 下 ： 输入 `npm -v` 提示版本号 `3.8.9`;\r\n\r\n-下载Node.js包:\r\n\r\n命令：`npm install jquery`，会在下载到node_modules目录下;\r\n\r\n- package.json:\r\n\r\n创建 package.json 文件命令：`npm init`;\r\n\r\n```\r\n\r\n\t//创建的package.json文件\r\n\t{\r\n\t  \"name\": \"demo\",\r\n\t  \"version\": \"1.0.0\",\r\n\t  \"description\": \"\",\r\n\t  \"main\": \"js.js\",\r\n\t  \"dependencies\": {\r\n\t    \"jquery\": \"^3.1.0\"\r\n\t  },\r\n\t  \"devDependencies\": {},\r\n\t  \"scripts\": {\r\n\t    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\r\n\t  },\r\n\t  \"author\": \"\",\r\n\t  \"license\": \"ISC\"\r\n\t}\r\n\r\n```\r\n- 根据 package.json 下载所依赖的包：\r\n\r\n命令： `npm i` 或 `npm i --dev` 或 `npm i --production`;\r\n\r\n- 全局安装：\r\n\r\n全局范围可用express，不存在与某个项目下。\r\n\r\n命令：`npm install -g express`;\r\n\r\n- 同步更改package.json依赖的安装：\r\n\r\n命令：`npm install gulp --save` 生产环境依赖包；`npm install gulp --save-dev` 开发环境依赖包;\r\n\r\n- 卸载包：\r\n\r\n命令：`npm uninstall gulp --save-dev`;\r\n\r\n- 更新包：\r\n\r\n命令：`npm update jquery`;`npm update` 更新所有；\r\n\r\n### Node.js 启动 server 服务器\r\n\r\nhttp-server：基于Nodejs的轻量级HTTP服务器；GitHub地址：[https://github.com/indexzero/http-server](https://github.com/indexzero/http-server)\r\n\r\n- 安装：`npm install http-server -g`;\r\n- 开启服务: `http-server`;\r\n- 关闭服务: `Ctrl + C`;\r\n\r\n## 8 处理兼容性及多设备调试\r\n\r\n## 9 打包发布\r\n\r\n### 发布前优化\r\n- 压缩：文件压缩 [http://javascript-minifier.com/](http://javascript-minifier.com/ \"文件压缩\")\r\n- 合并\r\n- 增加版本号\r\n\r\n### 打包发布\r\n\r\n- 主流的3个工具：\r\n\r\n\t- 自动化构建工具 Grunt、Gulp；\r\n\t- 静态资源打包工具 Webpack;\r\n\r\n### Gulp使用\r\n\r\nGulp中文网 [http://www.gulpjs.com.cn/](http://www.gulpjs.com.cn/ \"Gulp中文网\")\r\n\r\n> - 易于使用\r\n> \r\n> 通过代码优于配置的策略，Gulp 让简单的任务简单，复杂的任务可管理。\r\n> \r\n> - 构建快速\r\n> \r\n> 利用 Node.js 流的威力，你可以快速构建项目并减少频繁的 IO 操作。\r\n> \r\n> - 插件高质\r\n> \r\n> Gulp 严格的插件指南确保插件如你期望的那样简洁高质得工作。\r\n> \r\n> - 易于学习\r\n> \r\n> 通过最少的 API，掌握 Gulp 毫不费力，构建工作尽在掌握：如同一系列流管道。\r\n\r\n**使用流程**：\r\n\r\n1. 在项目下初始化 package.json 文件；\r\n2. 安装 Gulp 并添加到 package 开发环境依赖中, `npm install gulp --save-dev` ,检验安装 `gulp -v` ;\r\n3. 根目录下建立 gulpfile.js 文件；\r\n \r\n```\r\n\r\n\t//建立gulp依赖\r\n\tvar gulp = require('gulp');\r\n\t\r\n\t//建立任务\r\n\tgulp.task('task-name',function(){\r\n\t\tconsole.log('hello gulp!');\r\n\t});\r\n\r\n``` \r\n\r\n4. 运行任务 `gulp task-name`；\r\n5. 安装 gulp 插件，`npm install gulp-rev gulp-rev-replace gulp-useref gulp-filter gulp-uglify gulp-csso --save-dev` ;\r\n\r\n- gulp-rev：根据文件内容为文件建立版本号(哈希码)，解决文件更改后本地缓存问题；\r\n- gulp-rev-replace：把更改过内容的文件版本号(哈希码)自动适配到index文件里的文件引用中；\r\n- gulp-useref：以在HTML页面里添加注释的方法来进行文件合并的设置；\r\n- gulp-filter：过滤文件操作；\r\n- gulp-uglify：压缩js文件；\r\n- gulp-csso：压缩css文件；\r\n\r\n6. 在 gulpfile.js 中引用各种依赖；\r\n\r\n``` type=javascript\r\n\r\n\t//gulpfile.js文件内容\r\n\tvar gulp = require('gulp');\r\n\tvar rev = require('gulp-rev');\r\n\tvar revReplace = require('rev-replace');\r\n\tvar useref = require('gulp-useref');\r\n\tvar filter = require('gulp-filter');\r\n\tvar uglify = require('gulp-uglify');\r\n\tvar csso = require('gulp-csso');\r\n\r\n\tgulp.task('default',function(){\r\n\t\tvar jsFilter = filter('**/*.js',{restore: true});\r\n\t\tvar cssFilter = filter('**/*.css',{restore: true});\r\n\t\tvar indexHtmlFilter = filter(['**/*','!**/index.html'],{restore: true});\r\n\r\n\t\treturn gulp.src('src/index.html')\r\n\t\t\t.pipe(useref())\r\n\t\t\t.pipe(jsFilter)\r\n\t\t\t.pipe(uglify)\r\n\t\t\t.pipe(jsFilter.restore)\r\n\t\t\t\r\n\t\t\t.pipe(cssFilter)\r\n\t\t\t.pipe(csso)\r\n\t\t\t.pipe(cssFilter.restore)\r\n\t\t\t\r\n\t\t\t.pipe(indexHtmlFilter)\r\n\t\t\t.pipe(rev())\r\n\t\t\t.pipe(indexHtmlFilter.restore)\r\n\t\t\t\r\n\t\t\t.pipe(revReplace)\r\n\t\t\t.pipe(gulp.dest('dist'));\r\n\t\t\r\n\t\t});\r\n\r\n```\r\n\r\n7. 执行 `gulp default` 开始打包 。\r\n\r\n其他gulp插件：\r\n\r\n- gult-watch：更改文件,自动打包；GitHub地址 [https://github.com/floatdrop/gulp-watch](https://github.com/floatdrop/gulp-watch \"gult-watch\")\r\n- gulp-postcss：css文件添加前缀等一些处理；GitHub地址 [https://github.com/postcss/gulp-postcss](https://github.com/postcss/gulp-postcss \"gulp-postcss\")\r\n- gulp-concat：文件合并；GitHub地址 [https://github.com/contra/gulp-concat](https://github.com/contra/gulp-concat \"gulp-concat\")\r\n- gulp-responsive：生成响应式图片；GitHub地址 [https://github.com/mahnunchik/gulp-responsive](https://github.com/mahnunchik/gulp-responsive \"gulp-responsive\")\r\n\r\n## 7 nodejs简介\r\n\r\n## 8 处理兼容性及多设备调试\r\n\r\n## 9 打包发布\r\n\r\n## 10 IDE\r\n\r\n## 11 原型设计和切图\r\n\r\n\r\n\r\n\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}